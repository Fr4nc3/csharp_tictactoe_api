// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace RestClientSDKLibrary
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Models;

    /// <summary>
    /// Extension methods for RestClientSDKLibraryClient.
    /// </summary>
    public static partial class RestClientSDKLibraryClientExtensions
    {
            /// <summary>
            /// executemode route
            /// </summary>
            /// Sample value of body
            /// 
            /// {
            /// "move": 2,
            /// "azurePlayerSymbol": "X",
            /// "humanPlayerSymbol": "O",
            /// "gameBoard": [
            /// "?",  "?",  "O",  "X",  "?",  "X",  "X",  "O", "O"
            /// ]
            /// }
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// payload body object
            /// </param>
            public static object ExecuteMove(this IRestClientSDKLibraryClient operations, GameMove body = default(GameMove))
            {
                return Task.Factory.StartNew(s => ((IRestClientSDKLibraryClient)s).ExecuteMoveAsync(body), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// executemode route
            /// </summary>
            /// Sample value of body
            /// 
            /// {
            /// "move": 2,
            /// "azurePlayerSymbol": "X",
            /// "humanPlayerSymbol": "O",
            /// "gameBoard": [
            /// "?",  "?",  "O",  "X",  "?",  "X",  "X",  "O", "O"
            /// ]
            /// }
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// payload body object
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> ExecuteMoveAsync(this IRestClientSDKLibraryClient operations, GameMove body = default(GameMove), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ExecuteMoveWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// calculate move
            /// </summary>
            /// Sample value of body
            /// 
            /// {
            /// "playerSymbol": "X",
            /// "gameBoard": [
            /// "?",  "?",  "O",  "X",  "?",  "X",  "X",  "O", "O"
            /// ]
            /// }
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// payload body object
            /// </param>
            public static object CalculateMove(this IRestClientSDKLibraryClient operations, SelfMove body = default(SelfMove))
            {
                return Task.Factory.StartNew(s => ((IRestClientSDKLibraryClient)s).CalculateMoveAsync(body), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// calculate move
            /// </summary>
            /// Sample value of body
            /// 
            /// {
            /// "playerSymbol": "X",
            /// "gameBoard": [
            /// "?",  "?",  "O",  "X",  "?",  "X",  "X",  "O", "O"
            /// ]
            /// }
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// payload body object
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> CalculateMoveAsync(this IRestClientSDKLibraryClient operations, SelfMove body = default(SelfMove), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CalculateMoveWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
